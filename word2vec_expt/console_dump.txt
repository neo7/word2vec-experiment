saurabhtiwari:rnnlm]$ vim rnnlm
rnnlm-0.3e.tgz  rnnlm.cpp       rnnlmlib.cpp    rnnlmlib.h
saurabhtiwari:rnnlm]$ vim rnnlmlib.cpp
saurabhtiwari:rnnlm]$ g++ -lm -O3 -march=native -Wall -funroll-loops -ffast-math -c rnnlmlib.cpp
clang: warning: -lm: 'linker' input unused
saurabhtiwari:rnnlm]$ he
head            headerdoc2html  heap            heap32          help            hexdump
saurabhtiwari:rnnlm]$ he
head            headerdoc2html  heap            heap32          help            hexdump
saurabhtiwari:rnnlm]$ g++ -lm -O3 -march=native -Wall -funroll-loops -ffast-math rnnlm.cpp rnnlmlib.o -o rnnlm
saurabhtiwari:rnnlm]$ head ../aclImdb/train-pos.txt -n 12300 > train
head: -n: No such file or directory
head: 12300: No such file or directory
saurabhtiwari:rnnlm]$ head ../aclImdb/train-pos.txt -n 12300 > train
head: -n: No such file or directory
head: 12300: No such file or directory
saurabhtiwari:rnnlm]$ head -n 12300 ../aclImdb/train-pos.txt  > train
saurabhtiwari:rnnlm]$ tail -n 200 ../aclImdb/train-pos.txt  > valid
saurabhtiwari:rnnlm]$ ./rnnlm -rnnlm model-pos -train train -valid valid -hidden 50 -direct-order 3 -direct 200 -class 100 -debug 2 -bptt 4 -bptt-block 10 -binary
debug mode: 2
train file: train
valid file: valid
class size: 100
Hidden layer size: 50
Direct connections: 200M
Order of direct connections: 3
BPTT: 4
BPTT block: 10
Model will be saved in binary format
rnnlm file: model-pos
Starting training using file train
Vocab size: 77038
Words in train file: 3302770
Iter:   0	Alpha: 0.100000	   TRAIN entropy: 8.2253    Words/sec: 16091.6   VALID entropy: 7.9094
Iter:   1	Alpha: 0.100000	   TRAIN entropy: 7.5518    Words/sec: 17192.1   VALID entropy: 7.7408
Iter:   2	Alpha: 0.100000	   TRAIN entropy: 7.1893    Words/sec: 17645.8   VALID entropy: 7.6554
Iter:   3	Alpha: 0.100000	   TRAIN entropy: 6.9124    Words/sec: 17415.2   VALID entropy: 7.5954
Iter:   4	Alpha: 0.100000	   TRAIN entropy: 6.6795    Words/sec: 17518.3   VALID entropy: 7.5590
Iter:   5	Alpha: 0.100000	   TRAIN entropy: 6.4797    Words/sec: 16894.9   VALID entropy: 7.5430
Iter:   6	Alpha: 0.050000	   TRAIN entropy: 6.2307    Words/sec: 17179.9   VALID entropy: 7.4039
Iter:   7	Alpha: 0.025000	   TRAIN entropy: 6.1077    Words/sec: 17492.1   VALID entropy: 7.3233
Iter:   8	Alpha: 0.012500	   TRAIN entropy: 6.0491    Words/sec: 17155.8   VALID entropy: 7.2828
Iter:   9	Alpha: 0.006250	   TRAIN entropy: 6.0237    Words/sec: 17588.6   VALID entropy: 7.2623
saurabhtiwari:rnnlm]$ head ../train-neg.txt -n 12300 > trainhead: ../train-neg.txt: No such file or directory
head: -n: No such file or directory
head: 12300: No such file or directory
saurabhtiwari:rnnlm]$ head -n 12300 ../aclImdb/train-neg.txt > train
saurabhtiwari:rnnlm]$ tail -n 200 ../aclImdb/train-neg.txt > valid
    1 0 i went and saw this movie last night after being coaxed to by a few friends of mine .  i'll admit that i was reluctant to       see it because from what i knew of ashton kutcher he was only able to do comedy .  i was wrong .  kutcher played the              character of jake fischer very well ,  and kevin costner played ben randall with such professionalism .  the sign of a good       movie is that it can toy with our emotions .  this one did exactly that .  the entire theater  ( which was sold out )  was        overcome by laughter during the first half of the movie ,  and were moved to tears during the second half .  while exiting        the theater i not only saw many women in tears ,  but many full grown men as well ,  trying desperately not to let anyone         see them crying .  this movie was great ,  and i suggest that you go see it before you judge .
    2 1 actor turned director bill paxton follows up his promising debut ,  the gothic-horror  " frailty "  ,  with this family         friendly sports drama about the 1913 u . s .  open where a young american caddy rises from his humble background to play          against his bristish idol in what was dubbed as  " the greatest game ever played .  "  i'm no fan of golf ,  and these            scrappy underdog sports flicks are a dime a dozen  ( most recently done to grand effect with  " miracle "  and  "                 cinderella man "  )  ,  but some how this film was enthralling all the same .   the film starts with some creative opening        credits  ( imagine a disneyfied version of the animated opening credits of hbo's  " carnivale "  and  " rome "  )  ,  but         lumbers along slowly for its first by-the-numbers hour .  once the action moves to the u . s .  open things pick up very          well .  paxton does a nice job and shows a knack for effective directorial flourishes  ( i loved the rain-soaked montage of       the action on day two of the open )  that propel the plot further or add some unexpected psychological depth to the               proceedings .  there's some compelling character development when the british harry vardon is haunted by images of the            aristocrats in black suits and top hats who destroyed his family cottage as a child to make way for a golf course .  he           also does a good job of visually depicting what goes on in the players' heads under pressure .  golf ,  a painfully boring        sport ,  is brought vividly alive here .  credit should also be given the set designers and costume department for creating       an engaging period-piece atmosphere of london and boston at the beginning of the twentieth century .   you know how this is       going to end not only because it's based on a true story but also because films in this genre follow the same template over       and over ,  but paxton puts on a better than average show and perhaps indicates more talent behind the camera than he ever        had in front of it .  despite the formulaic nature ,  this is a nice and easy film to root for that deserves to find an           audience .
    3 2 as a recreational golfer with some knowledge of the sport's history ,  i was pleased with disney's sensitivity to the           issues of class in golf in the early twentieth century .  the movie depicted well the psychological battles that harry            vardon fought within himself ,  from his childhood trauma of being evicted to his own inability to break that glass ceiling       that prevents him from being accepted as an equal in english golf society .  likewise ,  the young ouimet goes through his        own class struggles ,  being a mere caddie in the eyes of the upper crust americans who scoff at his attempts to rise above       his standing .    what i loved best ,  however ,  is how this theme of class is manifested in the characters of ouimet's          parents .  his father is a working-class drone who sees the value of hard work but is intimidated by the upper class ;  his       mother ,  however ,  recognizes her son's talent and desire and encourages him to pursue his dream of competing against           those who think he is inferior .   finally ,  the golf scenes are well photographed .  although the course used in the            movie was not the actual site of the historical tournament ,  the little liberties taken by disney do not detract from the        beauty of the film .  there's one little disney moment at the pool table ;  otherwise ,  the viewer does not really think         disney .  the ending ,  as in  " miracle ,  "  is not some disney creation ,  but one that only human history could have          written .
"test-id.txt" 25000L, 33582803C

saurabhtiwari:rnnlm]$ ./rnnlm -rnnlm model-neg -train train -valid valid -hidden 50 -direct-order 3 -direct 200 -class 100 -debug 2 -bptt 4 -bptt-block 10 -binary
debug mode: 2
train file: train
valid file: valid
class size: 100
Hidden layer size: 50
Direct connections: 200M
Order of direct connections: 3
BPTT: 4
BPTT block: 10
Model will be saved in binary format
rnnlm file: model-neg
    1 -340.769682 -351.449554 0.969612
    2 -902.039329 -914.209159 0.986688
    3 -610.323610 -634.907836 0.961279
    4 -246.098784 -256.483059 0.959513
    5 -502.536770 -534.669918 0.939901
    6 -847.496343 -892.382689 0.949701
    7 -848.718062 -870.810887 0.97463
    8 -361.956586 -360.183663 1.00492
    9 -384.280078 -401.829859 0.956325
   10 -2979.567365 -3030.110767 0.98332
   11 -557.063761 -575.635702 0.967737
   12 -306.568628 -325.590587 0.941577
   13 -420.465681 -433.257765 0.970475
   14 -379.644759 -400.176429 0.948693
   15 -215.813610 -219.157757 0.984741
   16 -831.847888 -901.170862 0.923075
   17 -514.929459 -512.099696 1.00553
   18 -2095.736450 -2150.331225 0.974611
   19 -454.152538 -464.846956 0.976994
   20 -301.856294 -302.803958 0.99687
   21 -718.611510 -730.073971 0.9843
   22 -500.555877 -517.017280 0.968161
   23 -522.820613 -532.657699 0.981532
   24 -110.670060 -121.723340 0.909193
   25 -280.751489 -297.641228 0.943255
   26 -344.711254 -365.955774 0.941948
   27 -758.064119 -747.367787 1.01431
   28 -303.998048 -305.434994 0.995295
   29 -453.123467 -491.324045 0.92225
   30 -3143.000018 -3298.379366 0.952892
   31 -1287.956652 -1327.280709 0.970372
   32 -429.431801 -485.076994 0.885286
   33 -2729.443552 -2835.464017 0.962609
   34 -306.696890 -325.616685 0.941895
   35 -691.551430 -711.554976 0.971888
   36 -2252.519521 -2359.807328 0.954535
   37 -975.283556 -1021.956278 0.95433
   38 -295.580695 -324.611132 0.910569
"RNNLM-SCORE" 25000L, 815793C

Starting training using file train
Vocab size: 75661
Words in train file: 3225724
Iter:   0	Alpha: 0.100000	   TRAIN entropy: 8.1276    Words/sec: 16533.3   VALID entropy: 7.8818
Iter:   1	Alpha: 0.100000	   TRAIN entropy: 7.4586    Words/sec: 17144.2   VALID entropy: 7.6929
Iter:   2	Alpha: 0.100000	   TRAIN entropy: 7.1128    Words/sec: 17791.7   VALID entropy: 7.6219
Iter:   3	Alpha: 0.100000	   TRAIN entropy: 6.8525    Words/sec: 16943.7   VALID entropy: 7.5649
Iter:   4	Alpha: 0.100000	   TRAIN entropy: 6.6332    Words/sec: 18310.2   VALID entropy: 7.5409
Iter:   5	Alpha: 0.100000	   TRAIN entropy: 6.4420    Words/sec: 16913.7   VALID entropy: 7.5273
Iter:   6	Alpha: 0.050000	   TRAIN entropy: 6.1884    Words/sec: 16884.9   VALID entropy: 7.4200
Iter:   7	Alpha: 0.025000	   TRAIN entropy: 6.0618    Words/sec: 17634.4   VALID entropy: 7.3697
Iter:   8	Alpha: 0.012500	   TRAIN entropy: 6.0012    Words/sec: 17640.6   VALID entropy: 7.3312
Iter:   9	Alpha: 0.006250	   TRAIN entropy: 5.9746    Words/sec: 19118.0   VALID entropy: 7.3078
Iter:  10	Alpha: 0.003125	   TRAIN entropy: 5.9668    Words/sec: 19714.8   VALID entropy: 7.2945
saurabhtiwari:rnnlm]$ cat ../aclImdb/test-pos.txt ../aclImdb/test-neg.txt > test.txt
saurabhtiwari:rnnlm]$ awk 'BEGIN{a=0;}{print a " " $0; a++;}' < test.txt > test-id.txt
saurabhtiwari:rnnlm]$ ./rnnlm -rnnlm model-pos -test test-id.txt -debug 0 -nbest > model-pos-score
saurabhtiwari:rnnlm]$ test
test    testrb
saurabhtiwari:rnnlm]$ test
test    testrb
saurabhtiwari:rnnlm]$ vim test
test         test-id.txt  test.txt
saurabhtiwari:rnnlm]$ vim test
test         test-id.txt  test.txt
saurabhtiwari:rnnlm]$ vim test-id.txt
saurabhtiwari:rnnlm]$ ./rnnlm -rnnlm model-neg -test test-id.txt -debug 0 -nbest > model-neg-score
saurabhtiwari:rnnlm]$ paste model-pos-score model-neg-score | awk '{print $1 " " $2 " " $1/$2;}' > ../RNNLM-SCORE
saurabhtiwari:rnnlm]$ ls
CHANGE.log           example.sh           model-neg.output.txt rnnlm                rnnlmlib.h           test.txt
COPYRIGHT.txt        makefile             model-pos            rnnlm-0.3e.tgz       rnnlmlib.o           train
FAQ.txt              model-neg            model-pos-score      rnnlm.cpp            test                 valid
convert.c            model-neg-score      model-pos.output.txt rnnlmlib.cpp         test-id.txt
saurabhtiwari:rnnlm]$ cd ..
saurabhtiwari:word2vec_expt]$ ls
RNNLM-SCORE        aclImdb            rnnlm              word2vec-read-only
saurabhtiwari:word2vec_expt]$ vim RNNLM-SCORE
RNNLM-SCORE         aclImdb/            rnnlm/              word2vec-read-only/
saurabhtiwari:word2vec_expt]$ vim RNNLM-SCORE
saurabhtiwari:word2vec_expt]$ cd ..
saurabhtiwari:cs585project]$ ls
IMDB.arff         bayes_model.model review_polarity   test_pos.arff     testv2.arff       trained_data.arff
README.md         j48.model         stopwords_eng.txt test_set.arff     train_set_v2.arff word2vec_expt
saurabhtiwari:cs585project]$ cd word2vec_expt/
saurabhtiwari:word2vec_expt]$ ls
RNNLM-SCORE        aclImdb            rnnlm              word2vec-read-only
saurabhtiwari:word2vec_expt]$ ls
RNNLM-SCORE        aclImdb            rnnlm              word2vec-read-only
saurabhtiwari:word2vec_expt]$ cd word2vec-read-only/
saurabhtiwari:word2vec-read-only]$ ls
LICENSE                    demo-phrase-accuracy.sh    distance.c                 word2phrase.c
README.txt                 demo-phrases.sh            makefile                   word2vec.c
compute-accuracy.c         demo-train-big-model-v1.sh questions-phrases.txt      word2vec.c_old
demo-analogy.sh            demo-word-accuracy.sh      questions-words.txt
demo-classes.sh            demo-word.sh               word-analogy.c
saurabhtiwari:word2vec-read-only]$ ll
total 1808
-rw-r--r--  1 saurabhtiwari  staff    11K Dec 17 09:28 LICENSE
-rw-r--r--  1 saurabhtiwari  staff   1.2K Dec 17 09:28 README.txt
-rw-r--r--  1 saurabhtiwari  staff   5.1K Dec 17 09:28 compute-accuracy.c
-rw-r--r--  1 saurabhtiwari  staff   631B Dec 17 09:28 demo-analogy.sh
-rw-r--r--  1 saurabhtiwari  staff   358B Dec 17 09:28 demo-classes.sh
-rw-r--r--  1 saurabhtiwari  staff   885B Dec 17 09:28 demo-phrase-accuracy.sh
-rw-r--r--  1 saurabhtiwari  staff   853B Dec 17 09:28 demo-phrases.sh
-rwxr-xr-x  1 saurabhtiwari  staff   5.0K Dec 17 09:28 demo-train-big-model-v1.sh
-rw-r--r--  1 saurabhtiwari  staff   414B Dec 17 09:28 demo-word-accuracy.sh
-rw-r--r--  1 saurabhtiwari  staff   272B Dec 17 09:28 demo-word.sh
-rw-r--r--  1 saurabhtiwari  staff   4.5K Dec 17 09:28 distance.c
-rw-r--r--  1 saurabhtiwari  staff   718B Dec 17 09:28 makefile
-rw-r--r--  1 saurabhtiwari  staff   164K Dec 17 09:28 questions-phrases.txt
-rw-r--r--  1 saurabhtiwari  staff   590K Dec 17 09:28 questions-words.txt
-rw-r--r--  1 saurabhtiwari  staff   4.6K Dec 17 09:28 word-analogy.c
-rw-r--r--  1 saurabhtiwari  staff   9.2K Dec 17 09:28 word2phrase.c
-rw-r-----@ 1 saurabhtiwari  staff    27K Jan  7 12:29 word2vec.c
-rw-r--r--  1 saurabhtiwari  staff    26K Dec 17 09:28 word2vec.c_old
saurabhtiwari:word2vec-read-only]$ gcc word2vec.c -o word2vec -lm -pthread -O3 -march=native -funroll-loops
saurabhtiwari:word2vec-read-only]$ time ./word2vec -train ../alldata-id.txt -output vectors.txt -cbow 0 -size 100 -window 10 -negative 5 -hs 0 -sample 1e-4 -threads 40 -binary 0 -iter 20 -min-count 1 -sentence-vectors 1
Starting training using file ../alldata-id.txt
ERROR: training data file not found!

real	0m0.074s
user	0m0.026s
sys	0m0.043s
saurabhtiwari:word2vec-read-only]$ time ./word2vec -train ../aclImdb/alldata-id.txt -output vectors.txt -cbow 0 -size 100 -window 10 -negative 5 -hs 0 -sample 1e-4 -threads 40 -binary 0 -iter 20 -min-count 1 -sentence-vectors 1
Starting training using file ../aclImdb/alldata-id.txt
Vocab size: 356414
Words in train file: 26499251
Alpha: 0.000002  Progress: 100.02%  Words/thread/sec: 63.74k
real	38m20.783s
user	138m25.973s
sys	0m38.613s
saurabhtiwari:word2vec-read-only]$ grep '_\*' vectors.txt > sentence_vectors.txt
saurabhtiwari:word2vec-read-only]$ wget http://www.csie.ntu.edu.tw/~cjlin/liblinear/liblinear-1.94.zip
--2016-01-07 13:11:35--  http://www.csie.ntu.edu.tw/~cjlin/liblinear/liblinear-1.94.zip
Resolving www.csie.ntu.edu.tw (www.csie.ntu.edu.tw)... 140.112.30.28
Connecting to www.csie.ntu.edu.tw (www.csie.ntu.edu.tw)|140.112.30.28|:80... connected.
HTTP request sent, awaiting response... 404 Not Found
2016-01-07 13:11:36 ERROR 404: Not Found.

saurabhtiwari:word2vec-read-only]$ ls
LICENSE                    demo-phrases.sh            makefile                   word2phrase.c
README.txt                 demo-train-big-model-v1.sh questions-phrases.txt      word2vec
compute-accuracy.c         demo-word-accuracy.sh      questions-words.txt        word2vec.c
demo-analogy.sh            demo-word.sh               sentence_vectors.txt       word2vec.c_old
demo-classes.sh            distance.c                 vectors.txt
demo-phrase-accuracy.sh    liblinear-2.1.zip          word-analogy.c
saurabhtiwari:word2vec-read-only]$ ls
LICENSE                    demo-phrases.sh            makefile                   word2phrase.c
README.txt                 demo-train-big-model-v1.sh questions-phrases.txt      word2vec
compute-accuracy.c         demo-word-accuracy.sh      questions-words.txt        word2vec.c
demo-analogy.sh            demo-word.sh               sentence_vectors.txt       word2vec.c_old
demo-classes.sh            distance.c                 vectors.txt
demo-phrase-accuracy.sh    liblinear-2.1.zip          word-analogy.c
saurabhtiwari:word2vec-read-only]$ ls
LICENSE                    demo-phrases.sh            makefile                   word2phrase.c
README.txt                 demo-train-big-model-v1.sh questions-phrases.txt      word2vec
compute-accuracy.c         demo-word-accuracy.sh      questions-words.txt        word2vec.c
demo-analogy.sh            demo-word.sh               sentence_vectors.txt       word2vec.c_old
demo-classes.sh            distance.c                 vectors.txt
demo-phrase-accuracy.sh    liblinear-2.1.zip          word-analogy.c
saurabhtiwari:word2vec-read-only]$ unzip liblinear-2.1.zip
Archive:  liblinear-2.1.zip
   creating: liblinear-2.1/
   creating: liblinear-2.1/blas/
  inflating: liblinear-2.1/blas/blasp.h
  inflating: liblinear-2.1/blas/dnrm2.c
  inflating: liblinear-2.1/blas/Makefile
  inflating: liblinear-2.1/blas/ddot.c
  inflating: liblinear-2.1/blas/dscal.c
  inflating: liblinear-2.1/blas/blas.h
  inflating: liblinear-2.1/blas/daxpy.c
  inflating: liblinear-2.1/COPYRIGHT
  inflating: liblinear-2.1/linear.h
  inflating: liblinear-2.1/README
  inflating: liblinear-2.1/Makefile.win
  inflating: liblinear-2.1/train.c
  inflating: liblinear-2.1/heart_scale
  inflating: liblinear-2.1/tron.cpp
  inflating: liblinear-2.1/Makefile
  inflating: liblinear-2.1/linear.def
   creating: liblinear-2.1/windows/
  inflating: liblinear-2.1/windows/train.exe
  inflating: liblinear-2.1/windows/predict.mexw64
  inflating: liblinear-2.1/windows/train.mexw64
  inflating: liblinear-2.1/windows/predict.exe
  inflating: liblinear-2.1/windows/libsvmwrite.mexw64
  inflating: liblinear-2.1/windows/libsvmread.mexw64
  inflating: liblinear-2.1/windows/liblinear.dll
  inflating: liblinear-2.1/linear.cpp
  inflating: liblinear-2.1/predict.c
  inflating: liblinear-2.1/tron.h
   creating: liblinear-2.1/python/
  inflating: liblinear-2.1/python/README
  inflating: liblinear-2.1/python/liblinearutil.py
  inflating: liblinear-2.1/python/Makefile
  inflating: liblinear-2.1/python/liblinear.py
   creating: liblinear-2.1/matlab/
  inflating: liblinear-2.1/matlab/README
  inflating: liblinear-2.1/matlab/linear_model_matlab.h
  inflating: liblinear-2.1/matlab/train.c
  inflating: liblinear-2.1/matlab/Makefile
  inflating: liblinear-2.1/matlab/make.m
  inflating: liblinear-2.1/matlab/libsvmread.c
  inflating: liblinear-2.1/matlab/libsvmwrite.c
  inflating: liblinear-2.1/matlab/predict.c
  inflating: liblinear-2.1/matlab/linear_model_matlab.c
saurabhtiwari:word2vec-read-only]$ cd liblinear-2.1
saurabhtiwari:liblinear-2.1]$ make
c++ -Wall -Wconversion -O3 -fPIC -c -o tron.o tron.cpp
tron.cpp:98:35: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                memcpy(w_new, w, sizeof(double)*n);
                                               ~^
tron.cpp:134:36: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                        memcpy(w, w_new, sizeof(double)*n);
                                                       ~^
2 warnings generated.
c++ -Wall -Wconversion -O3 -fPIC -c -o linear.o linear.cpp
linear.cpp:510:11: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        qsort(D, active_i, sizeof(double), compare_double);
        ~~~~~    ^~~~~~~~
linear.cpp:2014:33: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        x_space = new feature_node[nnz+n];
                                      ~^
linear.cpp:2045:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        int *label = Malloc(int,max_nr_class);
                     ~~~~~~~~~~~^~~~~~~~~~~~~
linear.cpp:22:40: note: expanded from macro 'Malloc'
#define Malloc(type,n) (type *)malloc((n)*sizeof(type))
                                       ^
linear.cpp:2046:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        int *count = Malloc(int,max_nr_class);
                     ~~~~~~~~~~~^~~~~~~~~~~~~
linear.cpp:22:40: note: expanded from macro 'Malloc'
#define Malloc(type,n) (type *)malloc((n)*sizeof(type))
                                       ^
linear.cpp:2047:31: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        int *data_label = Malloc(int,l);
                          ~~~~~~~~~~~^~
linear.cpp:22:40: note: expanded from macro 'Malloc'
#define Malloc(type,n) (type *)malloc((n)*sizeof(type))
                                       ^
linear.cpp:2068:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                label = (int *)realloc(label,max_nr_class*sizeof(int));
                                                             ^~~~~~~~~~~~~
linear.cpp:2069:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                count = (int *)realloc(count,max_nr_class*sizeof(int));
                                                             ^~~~~~~~~~~~~
linear.cpp:2095:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        int *start = Malloc(int,nr_class);
                     ~~~~~~~~~~~^~~~~~~~~
linear.cpp:22:40: note: expanded from macro 'Malloc'
#define Malloc(type,n) (type *)malloc((n)*sizeof(type))
                                       ^
linear.cpp:2278:30: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                model_->w = Malloc(double, w_size);
                            ~~~~~~~~~~~~~~~^~~~~~~
linear.cpp:22:40: note: expanded from macro 'Malloc'
#define Malloc(type,n) (type *)malloc((n)*sizeof(type))
                                       ^
linear.cpp:2291:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                int *perm = Malloc(int,l);
                            ~~~~~~~~~~~^~
linear.cpp:22:40: note: expanded from macro 'Malloc'
#define Malloc(type,n) (type *)malloc((n)*sizeof(type))
                                       ^
linear.cpp:2297:30: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                model_->label = Malloc(int,nr_class);
                                ~~~~~~~~~~~^~~~~~~~~
linear.cpp:22:40: note: expanded from macro 'Malloc'
#define Malloc(type,n) (type *)malloc((n)*sizeof(type))
                                       ^
linear.cpp:2302:39: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                double *weighted_C = Malloc(double, nr_class);
                                     ~~~~~~~~~~~~~~~^~~~~~~~~
linear.cpp:22:40: note: expanded from macro 'Malloc'
#define Malloc(type,n) (type *)malloc((n)*sizeof(type))
                                       ^
linear.cpp:2317:44: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                feature_node **x = Malloc(feature_node *,l);
                                   ~~~~~~~~~~~~~~~~~~~~~~^~
linear.cpp:22:40: note: expanded from macro 'Malloc'
#define Malloc(type,n) (type *)malloc((n)*sizeof(type))
                                       ^
linear.cpp:2325:47: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                sub_prob.x = Malloc(feature_node *,sub_prob.l);
                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
linear.cpp:22:40: note: expanded from macro 'Malloc'
#define Malloc(type,n) (type *)malloc((n)*sizeof(type))
                                       ^
linear.cpp:2326:39: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                sub_prob.y = Malloc(double,sub_prob.l);
                             ~~~~~~~~~~~~~~~~~~~~~~~^~
linear.cpp:22:40: note: expanded from macro 'Malloc'
#define Malloc(type,n) (type *)malloc((n)*sizeof(type))
                                       ^
linear.cpp:2334:30: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                        model_->w=Malloc(double, n*nr_class);
                                  ~~~~~~~~~~~~~~~~^~~~~~~~~~
linear.cpp:22:40: note: expanded from macro 'Malloc'
#define Malloc(type,n) (type *)malloc((n)*sizeof(type))
                                       ^
linear.cpp:2345:30: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                model_->w=Malloc(double, w_size);
                                          ~~~~~~~~~~~~~~~^~~~~~~
linear.cpp:22:40: note: expanded from macro 'Malloc'
#define Malloc(type,n) (type *)malloc((n)*sizeof(type))
                                       ^
linear.cpp:2365:36: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                model_->w=Malloc(double, w_size*nr_class);
                                          ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
linear.cpp:22:40: note: expanded from macro 'Malloc'
#define Malloc(type,n) (type *)malloc((n)*sizeof(type))
                                       ^
linear.cpp:2366:30: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                double *w=Malloc(double, w_size);
                                          ~~~~~~~~~~~~~~~^~~~~~~
linear.cpp:22:40: note: expanded from macro 'Malloc'
#define Malloc(type,n) (type *)malloc((n)*sizeof(type))
                                       ^
linear.cpp:2414:25: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        int *perm = Malloc(int,l);
                    ~~~~~~~~~~~^~
linear.cpp:22:40: note: expanded from macro 'Malloc'
#define Malloc(type,n) (type *)malloc((n)*sizeof(type))
                                       ^
linear.cpp:2420:33: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        fold_start = Malloc(int,nr_fold+1);
                     ~~~~~~~~~~~~~~~~~~^~~
linear.cpp:22:40: note: expanded from macro 'Malloc'
#define Malloc(type,n) (type *)malloc((n)*sizeof(type))
                                       ^
linear.cpp:2440:51: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                subprob.x = Malloc(struct feature_node*,subprob.l);
                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
linear.cpp:22:40: note: expanded from macro 'Malloc'
#define Malloc(type,n) (type *)malloc((n)*sizeof(type))
                                       ^
linear.cpp:2441:37: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                subprob.y = Malloc(double,subprob.l);
                            ~~~~~~~~~~~~~~~~~~~~~~^~
linear.cpp:22:40: note: expanded from macro 'Malloc'
#define Malloc(type,n) (type *)malloc((n)*sizeof(type))
                                       ^
linear.cpp:2473:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        int *perm = Malloc(int, l);
                    ~~~~~~~~~~~~^~
linear.cpp:22:40: note: expanded from macro 'Malloc'
#define Malloc(type,n) (type *)malloc((n)*sizeof(type))
                                       ^
linear.cpp:2474:40: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        double *target = Malloc(double, prob->l);
                         ~~~~~~~~~~~~~~~~~~~~~^~
linear.cpp:22:40: note: expanded from macro 'Malloc'
#define Malloc(type,n) (type *)malloc((n)*sizeof(type))
                                       ^
linear.cpp:2475:43: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        struct problem *subprob = Malloc(problem,nr_fold);
                                  ~~~~~~~~~~~~~~~^~~~~~~~
linear.cpp:22:40: note: expanded from macro 'Malloc'
#define Malloc(type,n) (type *)malloc((n)*sizeof(type))
                                       ^
linear.cpp:2479:36: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        double **prev_w = Malloc(double*, nr_fold);
                          ~~~~~~~~~~~~~~~~^~~~~~~~
linear.cpp:22:40: note: expanded from macro 'Malloc'
#define Malloc(type,n) (type *)malloc((n)*sizeof(type))
                                       ^
linear.cpp:2491:33: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        fold_start = Malloc(int,nr_fold+1);
                     ~~~~~~~~~~~~~~~~~~^~~
linear.cpp:22:40: note: expanded from macro 'Malloc'
#define Malloc(type,n) (type *)malloc((n)*sizeof(type))
                                       ^
linear.cpp:2510:57: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                subprob[i].x = Malloc(struct feature_node*,subprob[i].l);
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
linear.cpp:22:40: note: expanded from macro 'Malloc'
#define Malloc(type,n) (type *)malloc((n)*sizeof(type))
                                       ^
linear.cpp:2511:43: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                subprob[i].y = Malloc(double,subprob[i].l);
                               ~~~~~~~~~~~~~~~~~~~~~~~~~^~
linear.cpp:22:40: note: expanded from macro 'Malloc'
#define Malloc(type,n) (type *)malloc((n)*sizeof(type))
                                       ^
linear.cpp:2556:32: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                prev_w[i] = Malloc(double, total_w_size);
                                            ~~~~~~~~~~~~~~~^~~~~~~~~~~~~
linear.cpp:22:40: note: expanded from macro 'Malloc'
#define Malloc(type,n) (type *)malloc((n)*sizeof(type))
                                       ^
linear.cpp:2668:46: warning: implicit conversion changes signedness: 'const int' to 'unsigned long' [-Wsign-conversion]
        double *dec_values = Malloc(double, model_->nr_class);
                             ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
linear.cpp:22:40: note: expanded from macro 'Malloc'
#define Malloc(type,n) (type *)malloc((n)*sizeof(type))
                                       ^
linear.cpp:2865:31: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                        model_->label = Malloc(int,nr_class);
                                        ~~~~~~~~~~~^~~~~~~~~
linear.cpp:22:40: note: expanded from macro 'Malloc'
#define Malloc(type,n) (type *)malloc((n)*sizeof(type))
                                       ^
linear.cpp:2888:33: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        model_->w=Malloc(double, w_size*nr_w);
                  ~~~~~~~~~~~~~~~~~~~~~^~~~~~
linear.cpp:22:40: note: expanded from macro 'Malloc'
#define Malloc(type,n) (type *)malloc((n)*sizeof(type))
                                       ^
linear.cpp:20:43: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        memcpy((void *)dst,(void *)src,sizeof(T)*n);
                                                ~^
linear.cpp:507:2: note: in instantiation of function template specialization 'clone<double, double>' requested here
        clone(D, B, active_i);
        ^
35 warnings generated.
make -C blas OPTFLAGS='-Wall -Wconversion -O3 -fPIC' CC='cc';
cc -Wall -Wconversion -O3 -fPIC  -c dnrm2.c
cc -Wall -Wconversion -O3 -fPIC  -c daxpy.c
cc -Wall -Wconversion -O3 -fPIC  -c ddot.c
cc -Wall -Wconversion -O3 -fPIC  -c dscal.c
ar rcv blas.a dnrm2.o daxpy.o ddot.o dscal.o
a - dnrm2.o
a - daxpy.o
a - ddot.o
a - dscal.o
ranlib  blas.a
c++ -Wall -Wconversion -O3 -fPIC -o train train.c tron.o linear.o blas/blas.a
clang: warning: treating 'c' input as 'c++' when in C++ mode, this behavior is deprecated
train.c:77:32: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                line = (char *) realloc(line,max_line_len);
                                ~~~~~~~      ^~~~~~~~~~~~
train.c:163:39: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        double *target = Malloc(double, prob.l);
                         ~~~~~~~~~~~~~~~~~~~~^~
train.c:8:40: note: expanded from macro 'Malloc'
#define Malloc(type,n) (type *)malloc((n)*sizeof(type))
                                       ^
train.c:250:79: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                param.weight_label = (int *) realloc(param.weight_label,sizeof(int)*param.nr_weight);
                                                                                                   ~~~~~~~^~~~~~~~~
train.c:251:73: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                param.weight = (double *) realloc(param.weight,sizeof(double)*param.nr_weight);
                                                                                             ~~~~~~~^~~~~~~~~
train.c:367:21: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        line = Malloc(char,max_line_len);
               ~~~~~~~~~~~~^~~~~~~~~~~~~
train.c:8:40: note: expanded from macro 'Malloc'
#define Malloc(type,n) (type *)malloc((n)*sizeof(type))
                                       ^
train.c:387:30: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        prob.y = Malloc(double,prob.l);
                 ~~~~~~~~~~~~~~~~~~~^~
train.c:8:40: note: expanded from macro 'Malloc'
#define Malloc(type,n) (type *)malloc((n)*sizeof(type))
                                       ^
train.c:388:45: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        prob.x = Malloc(struct feature_node *,prob.l);
                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
train.c:8:40: note: expanded from macro 'Malloc'
#define Malloc(type,n) (type *)malloc((n)*sizeof(type))
                                       ^
train.c:389:53: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        x_space = Malloc(struct feature_node,elements+prob.l);
                                                     ~~~~~~^
train.c:8:40: note: expanded from macro 'Malloc'
#define Malloc(type,n) (type *)malloc((n)*sizeof(type))
                                       ^
8 warnings generated.
c++ -Wall -Wconversion -O3 -fPIC -o predict predict.c tron.o linear.o blas/blas.a
clang: warning: treating 'c' input as 'c++' when in C++ mode, this behavior is deprecated
predict.c:37:32: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                line = (char *) realloc(line,max_line_len);
                                ~~~~~~~      ^~~~~~~~~~~~
predict.c:71:25: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                labels=(int *) malloc(nr_class*sizeof(int));
                                      ^~~~~~~~~
predict.c:73:38: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                prob_estimates = (double *) malloc(nr_class*sizeof(double));
                                                   ^~~~~~~~~
predict.c:82:24: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        line = (char *)malloc(max_line_len*sizeof(char));
                              ^~~~~~~~~~~~~
predict.c:103:43: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                x = (struct feature_node *) realloc(x,max_nr_attr*sizeof(struct feature_node));
                                                                      ^~~~~~~~~~~~
predict.c:234:37: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        x = (struct feature_node *) malloc(max_nr_attr*sizeof(struct feature_node));
                                           ^~~~~~~~~~~~
6 warnings generated.
saurabhtiwari:liblinear-2.1]$ cd ..
saurabhtiwari:word2vec-read-only]$ head sentence_vectors.txt -n 25000 | awk 'BEGIN{a=0;}{if (a<12500) printf "1 "; else printf "-1 "; for (b=1; b<NF; b++) printf b ":" $(b+1) " "; print ""; a++;}' > train.txt
head: -n: No such file or directory
head: 25000: No such file or directory
saurabhtiwari:word2vec-read-only]$ head -n 25000 sentence_vectors.txt | awk 'BEGIN{a=0;}{if (a<12500) printf "1 "; else printf "-1 "; for (b=1; b<NF; b++) printf b ":" $(b+1) " "; print ""; a++;}' > train.txt
saurabhtiwari:word2vec-read-only]$ head -n 50000 sentence_vectors.txt | tail -n 25000 | awk 'BEGIN{a=0;}{if (a<12500) printf "1 "; else printf "-1 "; for (b=1; b<NF; b++) printf b ":" $(b+1) " "; print ""; a++;}' > test.txt
saurabhtiwari:word2vec-read-only]$ ./liblinear-1.94/train -s 0 train.txt model.logreg
-bash: ./liblinear-1.94/train: No such file or directory
saurabhtiwari:word2vec-read-only]$ ./liblinear-2.1/train -s 0 train.txt model.logreg
iter  1 act 2.805e+02 pre 2.772e+02 delta 8.752e-01 f 1.733e+04 |g| 7.425e+02 CG   5
iter  2 act 2.312e+00 pre 2.309e+00 delta 8.752e-01 f 1.705e+04 |g| 5.629e+01 CG   7
iter  3 act 1.841e-02 pre 1.841e-02 delta 8.752e-01 f 1.705e+04 |g| 5.180e+00 CG   7
saurabhtiwari:word2vec-read-only]$ ./liblinear-2.1/predict -b 1 test.txt model.logreg out.logreg
Accuracy = 51.948% (12987/25000)
saurabhtiwari:word2vec-read-only]$ tail -n 25000 out.logreg > ../SENTENCE-VECTOR.LOGREG
saurabhtiwari:word2vec-read-only]$ cd ..
saurabhtiwari:word2vec_expt]$ ls
RNNLM-SCORE            SENTENCE-VECTOR.LOGREG aclImdb                rnnlm                  word2vec-read-only
saurabhtiwari:word2vec_expt]$ cat RNNLM-SCORE | awk ' \
 BEGIN{cn=0; corr=0;} \
 { \
   if ($3<1) if (cn<12500) corr++; \
   if ($3>1) if (cn>=12500) corr++; \
   cn++; \
 } \
 END{print "RNNLM accuracy: " corr/cn*100 "%";}'
RNNLM accuracy: 86.536%
saurabhtiwari:word2vec_expt]$ cat SENTENCE-VECTOR.LOGREG | awk ' \
 BEGIN{cn=0; corr=0;} \
 { \
   if ($2>0.5) if (cn<12500) corr++; \
   if ($2<0.5) if (cn>=12500) corr++; \
   cn++; \
 } \
 END{print "Sentence vector + logistic regression accuracy: " corr/cn*100 "%";}'
Sentence vector + logistic regression accuracy: 51.948%
saurabhtiwari:word2vec_expt]$ paste RNNLM-SCORE SENTENCE-VECTOR.LOGREG | awk ' \
 BEGIN{cn=0; corr=0;} \
 { \
   if (($3-1)*7+(0.5-$5)<0) if (cn<12500) corr++; \
   if (($3-1)*7+(0.5-$5)>0) if (cn>=12500) corr++; \
   cn++; \
 } \
 END{print "FINAL accuracy: " corr/cn*100 "%";}'
FINAL accuracy: 85.364%
saurabhtiwari:word2vec_expt]$


time ./word2vec -train ../alldata-id.txt -output vectors.txt -cbow 0 -size 100 -window 10 -negative 5 -hs 1 -sample 1e-3 -threads 40 -binary 0 -iter 20 -min-count 1 -sentence-vectors 1

https://s3.amazonaws.com/modelfilernnlm/projectcs585models/model-pos
https://s3.amazonaws.com/modelfilernnlm/projectcs585models/model-neg

